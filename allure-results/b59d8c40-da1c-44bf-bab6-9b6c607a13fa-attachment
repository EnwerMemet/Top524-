# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Create account >> Login with account
- Location: /Users/enwer/Desktop/TestAutomation/TopGeschenken/tests/TopGeschenken/createAccount.spec.js:97:8

# Error details

```
Error: "context" and "page" fixtures are not supported in "beforeAll" since they are created on a per-test basis.
If you would like to reuse a single page between tests, create context manually with browser.newContext(). See https://aka.ms/playwright/reuse-page for details.
If you would like to configure your page before each test, do that in beforeEach hook instead.
```

# Test source

```ts
   1 | const { test, expect } = require("@playwright/test");
   2 | import { faker } from "@faker-js/faker/locale/en";
   3 | const fs = require("fs");
   4 |
   5 | const URL = "https://topgeschenken.nl/";
   6 |
   7 | test.use({
   8 |   viewport: { width: 1800, height: 1200 },
   9 | });
   10 |
   11 | async function navigateToHomepage(page, URL) {
   12 |   console.log("🌐 Navigating to homepage...");
   13 |   await page.goto(URL);
   14 |   await page.click("#CookieConsentIOAccept");
   15 |   await page.waitForTimeout(2000);
   16 |   console.log("✅ Homepage loaded and cookie accepted");
   17 | }
   18 | async function generateEmail() {
   19 |   // const firstName = faker.person.firstName();
   20 |   const firstName = "Floyd";
   21 |   // const lastName = faker.person.lastName();
   22 |   const lastName = "Harvey";
   23 |   // const email = faker.internet.email({ firstName, lastName });
   24 |   const email = "Floyd_Harvey48@yahoo.com";
   25 |   console.log(`📧 Generated email: ${email} for ${firstName} ${lastName}`);
   26 | }
   27 |
   28 | test.describe("Create account", () => {
   29 |   test.beforeAll(async ({ page }) => {
   30 |     await generateEmail();
   31 |   });
   32 |
   33 |   test.beforeEach(async ({ page }) => {
   34 |     await navigateToHomepage(page, URL);
   35 |   });
   36 |
   37 |   test("Homepage should have the correct title", async ({ page }) => {
   38 |     await navigateToHomepage(page, URL);
   39 |
   40 |     // const firstName = faker.person.firstName();
   41 |     const firstName = "Floyd";
   42 |     // const lastName = faker.person.lastName();
   43 |     const lastName = "Harvey";
   44 |     // const email = faker.internet.email({ firstName, lastName });
   45 |     const email = "Floyd_Harvey48@yahoo.com";
   46 |     console.log(`📧 Generated email: ${email}`);
   47 |
   48 |     console.log("🔐 Starting registration process...");
   49 |     await page.getByRole("link", { name: "Inloggen" }).click();
   50 |     await page.locator("#email").fill(email);
   51 |     await page.getByRole("radio", { name: "Particulier" }).check();
   52 |     await page.getByRole("button", { name: "Registreren" }).click();
   53 |
   54 |     console.log("📝 Filling personal details...");
   55 |     await page.getByRole("radio", { name: "Dhr." }).check();
   56 |     await page.locator("#customer_firstname").fill(firstName);
   57 |     await page.locator("#customer_lastname").fill(lastName);
   58 |     await page.locator("#customer_addresses_0_postcode").fill("1025XL");
   59 |     await page.locator("#customer_addresses_0_number").fill("2000");
   60 |     await page.locator("#customer_phoneNumber").fill("08008844");
   61 |     await page.locator("#customer_birthday_day").selectOption("1");
   62 |     await page.locator("#customer_birthday_month").selectOption("1");
   63 |     await page.locator("#customer_birthday_year").selectOption("2000");
   64 |     await page.locator("#customer_plainPassword").fill("Top123!");
   65 |     await page.getByRole("button", { name: "Registreer je account" }).click();
   66 |
   67 |     console.log("👤 Verifying personal information...");
   68 |     await page.getByRole("link", { name: "Persoonlijke informatie" }).click();
   69 |
   70 |     const forename = await page.locator("#customer_firstname").innerText();
   71 |     const surname = await page.locator("#customer_lastname").innerText();
   72 |
   73 |     const countryNL = page.locator("#customer_country_choice_0");
   74 |     const address = await page
   75 |       .locator("#customer_addresses_0_street")
   76 |       .innerText();
   77 |     const postcode = await page
   78 |       .locator("#customer_addresses_0_postcode")
   79 |       .innerText();
   80 |
   81 |     console.log("🧪 verify personal info");
   82 |     expect(forename).toBe(firstName);
   83 |     expect(surname).toBe(lastName);
   84 |     expect(countryNL).toBeChecked();
   85 |     expect(address).toBe("Buikslotermeerplein");
   86 |     expect(postcode).toBe("1025XL");
   87 |     console.log("✅ Personal information verified!");
   88 |
   89 |     console.log("🔁 Swapping first and last names...");
   90 |     await page.locator("#customer_firstname").fill(lastName);
   91 |     await page.locator("#customer_lastname").fill(firstName);
   92 |     await page.getByRole("button", { name: "Opslaan" }).click();
   93 |
   94 |     console.log("✅ Account creation and verification completed!");
   95 |   });
   96 |
>  97 |   test.only("Login with account", async ({ page }) => {
      |        ^ Error: "context" and "page" fixtures are not supported in "beforeAll" since they are created on a per-test basis.
   98 |     await page.locator().getByRole("input", { name: "username" }).fill(email);
   99 |     await page
  100 |       .locator()
  101 |       .getByRole("input", { name: "password" })
  102 |       .fill("Top123!");
  103 |   });
  104 | });
  105 |
```